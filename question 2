import matplotlib.pyplot as pyplot
import numpy as np
from math import *
from scipy.optimize import curve_fit

# Initial variables
dx = 0.1
dt = 0.0001
n = 101
t = 10000
rho = [[0.0 for col in range(n)] for row in range(t)]
D = 2.0
step = input('diffusion time step -> ')
for i in range(48,53):
    rho[0][i] = 0.2


# Finite difference formular
for j in range(t-1):
    for i in range(1,n-1):
            rho[j+1][i] = rho[j][i]+D*dt/((dx)**2)*(rho[j][i+1]+rho[j][i-1]-2*rho[j][i]) 
               
# Curve fit
def func(x, sigma):
    return 1/(2*pi*(sigma**2))*np.exp(-x**2/(2*(sigma**2)))


# Plot the density profile after certain time step
x = np.linspace(-5,5,101)
pyplot.figure()
pyplot.plot(x,rho[step], label='diffusion after ' + str(step) + ' time steps')
pyplot.legend(prop={'size':9})
pyplot.ylabel('density')
pyplot.xlabel('position')
pyplot.show()
